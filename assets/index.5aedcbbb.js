import{a as p,p as m}from"./pupilometro.8a1f9651.js";const s="https://southamerica-east1-b15node-178618.cloudfunctions.net/storage";function l(a){if(!(a instanceof Date))throw new Error('Argumento "data" inv\xE1lido. Voc\xEA deve passar uma inst\xE2ncia de data');const t=a.getFullYear(),e=String(a.getMonth()+1).padStart(2,"0");return`${String(a.getDate()).padStart(2,"0")}/${e}/${t}`}var u={urlGCP:s,formatDate:l,async lista({bancoDeDados:a,tipoArquivo:t,idTabelaMaster:e}){if(!e)return[];let r=[];try{const n=a||localStorage.getItem("bancoDeDados");r=(await(await fetch(`${s}/${n}/${t}/${e}`,{method:"GET"})).json()).map(i=>({...i,...i.metadata,metadata:void 0}))}catch{}return[...r]},async le({tipoArquivo:a,idTabelaMaster:t,id:e,name:r,arquivo:n}){let o;const i=r.lastIndexOf(".")>0?r.substring(0,r.lastIndexOf(".")):r;return o=await fetch(`${s}/${i}`,{method:"GET"}),o.blob()},async grava({original:a,atual:t}){if(!t.nome)return;const e=$utils.compactarObjeto(t);await this.gravaOnline(e)||await $utils.sincronismoEnviar("adicionar","arquivo",e.id,e)},async gravaOnline(a,t){let e=!1;try{const r=a.nome.split(".").pop(),o=await(await fetch(s,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({base64:a.arquivo.replace(/^data:[^;]+;base64,/,""),extensao:r,banco:t||localStorage.getItem("bancoDeDados"),metadata:{id:a.id,nome:a.nome,tipoArquivo:a.tipoArquivo||"-",idTabelaMaster:a.idTabelaMaster,dataCriacao:l(new Date($utils.dataAtual()))}})})).json();e=(o==null?void 0:o.erro)==="",e||console.error("Erro ao gravar arquivo online.",o)}catch{e=!1}return e},async gravaImagem({id:a,tipoArquivo:t,conteudo:e}){var n;let r=!1;try{const o=(n=e==null?void 0:e.match(/data:image\/(\w+);base64/i))==null?void 0:n[1];o||console.error("Erro ao gravar arquivo online. Conteudo base64 com formato invalido.",e);const c=await(await fetch(s,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({base64:e.replace(/^data:[^;]+;base64,/,""),extensao:o,banco:localStorage.getItem("bancoDeDados"),metadata:{id:a,nome:`${t}.${o}`,tipoArquivo:t,idTabelaMaster:a,dataCriacao:l(new Date($utils.dataAtual()))}})})).json();r=(c==null?void 0:c.erro)==="",r||console.error("Erro ao gravar imagem online.",c)}catch{r=!1}return r},async remove(a){const t=Array.isArray(a)?a:[a];if(!!t.length)for(let e of t)!(e!=null&&e.id)||await this.removeOnline(e)},async removeOnline(a){if(!a.name)return!0;let t=!1;try{const r=await(await fetch(s,{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:a.name})})).json();t=!0}catch{t=!1}return t},async edita({original:a,atual:t}){if(!!t.name)try{return await fetch(s,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({banco:localStorage.getItem("bancoDeDados"),path:t.name,dados:t})})}catch(e){return console.error(e),e}},async operacaoSincronismo(a,t,e){return a==="remover"?this.removeOnline(t):a==="adicionar"?this.gravaOnline(t,e):(console.error("Opera\xE7\xE3o inv\xE1lida para arquivos"),!0)}};const d={app:p,pupilometro:m,arquivo:u};export{d};
